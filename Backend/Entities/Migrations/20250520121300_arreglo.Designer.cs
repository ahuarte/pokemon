// <auto-generated />
using Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(CartaspokemonContext))]
    [Migration("20250520121300_arreglo")]
    partial class arreglo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Entities.Cartum", b =>
                {
                    b.Property<int>("IdCarta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CARTA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarta"));

                    b.Property<int?>("Bloqueo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("BLOQUEO");

                    b.Property<int?>("Danyo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("DANYO");

                    b.Property<int?>("Hp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("HP");

                    b.Property<string>("ImagenCarta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGEN_CARTA");

                    b.Property<int?>("Municion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3)
                        .HasColumnName("MUNICION");

                    b.Property<string>("NombreCarta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOMBRE_CARTA");

                    b.HasKey("IdCarta")
                        .HasName("PK__CARTA__6F4C544FED4EF611");

                    b.ToTable("CARTA", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Combate", b =>
                {
                    b.Property<int>("IdCombate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_COMBATE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCombate"));

                    b.Property<int>("Turno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("TURNO");

                    b.HasKey("IdCombate")
                        .HasName("PK__COMBATE__E380D5BA4CC296F3");

                    b.ToTable("COMBATE", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Jugador", b =>
                {
                    b.Property<int>("IdJugador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_JUGADOR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJugador"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AVATAR");

                    b.Property<int?>("IdCarta")
                        .HasColumnType("int")
                        .HasColumnName("ID_CARTA");

                    b.Property<string>("NombreJugador")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOMBRE_JUGADOR");

                    b.HasKey("IdJugador")
                        .HasName("PK__JUGADOR__14B5F6591E1C2CD6");

                    b.HasIndex("IdCarta");

                    b.ToTable("JUGADOR", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.JugadorCombate", b =>
                {
                    b.Property<int>("IdCombate")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMBATE");

                    b.Property<int>("IdJugador")
                        .HasColumnType("int")
                        .HasColumnName("ID_JUGADOR");

                    b.Property<bool>("Ganador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("GANADOR");

                    b.HasKey("IdCombate", "IdJugador")
                        .HasName("PK_JUGADOR_COMBATE");

                    b.HasIndex("IdJugador");

                    b.ToTable("JUGADOR_COMBATE", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Jugador", b =>
                {
                    b.HasOne("Entities.Entities.Cartum", "IdCartaNavigation")
                        .WithMany("Jugadors")
                        .HasForeignKey("IdCarta")
                        .HasConstraintName("FK_JUGADOR_CARTA");

                    b.Navigation("IdCartaNavigation");
                });

            modelBuilder.Entity("Entities.Entities.JugadorCombate", b =>
                {
                    b.HasOne("Entities.Entities.Combate", "Combate")
                        .WithMany("JugadorCombates")
                        .HasForeignKey("IdCombate")
                        .IsRequired()
                        .HasConstraintName("FK_COMBATE");

                    b.HasOne("Entities.Entities.Jugador", "Jugador")
                        .WithMany("JugadorCombates")
                        .HasForeignKey("IdJugador")
                        .IsRequired()
                        .HasConstraintName("FK_JUGADOR_COMBATE");

                    b.Navigation("Combate");

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("Entities.Entities.Cartum", b =>
                {
                    b.Navigation("Jugadors");
                });

            modelBuilder.Entity("Entities.Entities.Combate", b =>
                {
                    b.Navigation("JugadorCombates");
                });

            modelBuilder.Entity("Entities.Entities.Jugador", b =>
                {
                    b.Navigation("JugadorCombates");
                });
#pragma warning restore 612, 618
        }
    }
}
